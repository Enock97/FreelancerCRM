name: Build-and-Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND_LATEST: ghcr.io/enock97/freelancercrm-backend:latest
  IMAGE_FRONTEND_LATEST: ghcr.io/enock97/freelancercrm-frontend:latest
  KUBE_NAMESPACE: freelancercrm

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set image tags
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND_LATEST }}
            ghcr.io/enock97/freelancercrm-backend:${{ steps.vars.outputs.sha }}

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND_LATEST }}
            ghcr.io/enock97/freelancercrm-frontend:${{ steps.vars.outputs.sha }}

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Decode kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo -n "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deploy/backend   -n ${{ env.KUBE_NAMESPACE }}
          kubectl rollout status deploy/frontend  -n ${{ env.KUBE_NAMESPACE }}
