# .github/workflows/ci-and-terraform.yml
name: CI – Tests, Deploy, Terraform

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
# ─────────────── Tests ───────────────
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      - run: npm ci            # root

      - run: npm ci            # frontend
        working-directory: frontend
      - run: npm test -- --ci --passWithNoTests
        working-directory: frontend
        continue-on-error: true

      - run: npm ci            # backend
        working-directory: backend
      - run: npm test -- --ci --passWithNoTests
        working-directory: backend
        continue-on-error: true

# ─────────── Deploy backend ───────────
  deploy-heroku:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      - run: npm ci
        working-directory: backend
      - run: npm run build
        working-directory: backend

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.14.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: freelancercrm-backend   # ← spell correctly
          heroku_email:    ${{ secrets.HEROKU_EMAIL }}
          usedocker: false
          dontuseforce: false
        env:
          NODE_ENV: production

# ───────────── Terraform ─────────────
  terraform-ci:
    needs: deploy-heroku
    runs-on: ubuntu-latest
    permissions:
      id-token: write        # for future OIDC
      contents: read
    env:
      TF_VAR_heroku_email:       ${{ secrets.HEROKU_EMAIL }}
      TF_VAR_heroku_api_key:     ${{ secrets.HEROKU_API_KEY }}
      TF_VAR_vercel_token:       ${{ secrets.VERCEL_TOKEN }}
      TF_VAR_jwt_secret:         ${{ secrets.JWT_SECRET }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ env.TF_TOKEN_app_terraform_io }}

      - run: terraform -chdir=infra init -input=false
      - run: terraform -chdir=infra plan -input=false
      - if: github.ref == 'refs/heads/main'
        run: terraform -chdir=infra apply -input=false -auto-approve
